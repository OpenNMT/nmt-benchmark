extends layout
include mixin.user.pug
include mixin.popup.pug

mixin field (f)
  - var required = ''
  if mode === 'create' && f.required
    - required = 'required'
  .inline.field(class=required)
    label.large= __(f.label)
    +popup(f.description)
    if f.type === 'user'
      input(type='hidden' name='user' value=uData.githubId || uData.id)
      +user(uData)
    else
      if mode === 'view'
        span(id=f.name) #{tsData[f.name]}
      else
        .ui.input
          input(name=f.name placeholder=f.placeholder)

mixin language (f, side)
  - var required = ''
  if mode === 'create'
    - required = 'required'
  .inline.field(class=required)
    label.large= __(f.label)
    +popup(f.description)
    if mode === 'view'
      span #{tsData[f.name]} - #{c2l[tsData[f.name]]}
    else
      .ui.selection.dropdown
        if side === 'src'
          .text #{c2l[src]}
          input(type='hidden' name=f.name value=src)
        else
          .text #{c2l[tgt]}
          input(type='hidden' name=f.name value=tgt)
        i.dropdown.icon
        .menu

mixin textarea (f)
  - var required = ''
  if mode === 'create' && f.required
    - required = 'required'
  .inline.field.special(class=required)
    label.large= __(f.label)
    +popup(f.description)
    if mode === 'view'
      span #{tsData[f.name]}
    else
      textarea(name=f.name placeholder=f.placeholder)

mixin radio (f)
  - var required = ''
  if mode === 'create' && f.required
    - required = 'required'
  .inline.field(class=required)
    label.large= __(f.label)
    +popup(f.description)
    if mode === 'view'
      span #{tsData[f.name] ? __('Yes') : __('No')}
    else
      .ui.toggle.checkbox
        input.hidden(type='checkbox' name=f.name checked='checked')
        label= __('Yes')

mixin hidden (f)
  - var required = f.className
  if mode === 'create' && f.required
    - required = 'required ' + f.className
  .inline.field(style='display: none;' class=required)
    label.large= __(f.label)
    +popup(f.description)
    if mode === 'view'
      span #{tsData[f.name]}
    else
      .ui.input
        input(name=f.name placeholder=f.placeholder)

mixin dropdown (f)
  - var required = ''
  if mode === 'create' && f.required
    - required = 'required'
  .inline.field(class=required)
    label.large= __(f.label)
    +popup(f.description)
    if mode === 'view'
      span #{tsData[f.name]}
    else
      .ui.selection.dropdown
        .text #{f.values[0]}
        input(name=f.name type='hidden' value=f.values[0])
        i.dropdown.icon
        .menu
          each element, i in f.values
            if i === 0
              .item.active(data-value=element) #{element}
            else
              .item(data-value=element) #{element}

mixin render (field)
  case field.type
    when 'user'
      +field(field)
    when 'textarea'
      +textarea(field)
    when 'dropdown'
      +dropdown(field)
    when 'language'
      if field.name === 'sourceLanguage'
        +language(field, 'src')
      else
        +language(field, 'tgt')
    when 'text/hidden'
      +hidden(field)
    when 'radio'
      +radio(field)
    default
      +field(field)

block modal
  include modal

block content
  .ui.grid.container
    .first.row
      h1
        if mode === 'create'
          span= __('Add translation system')
        if mode === 'view'
          span= __('System description')
          #systemId(data-content='Click to copy' data-position='right center') #{systemId}
    .row
      #translationSystem.ui.small.form
        .ui.three.column.stackable.grid
          .row
            .column
              for field in fieldSet
                if field.layer === 1
                  +render(field)
            .column
              for field in fieldSet
                if field.layer === 2
                  +render(field)
            .column
              for field in fieldSet
                if field.layer === 3
                  +render(field)
          .row
            .fifteen.wide.column
              for field in fieldSet
                if field.layer === 0
                  +render(field)
          if mode === 'create'
            .last.row
              .fifteen.wide.column
                #createSystem.ui.disabled.button(role='button' tabindex='0' aria-label='Create translation system')
                  i.plus.icon
                  span= __('Create')
    if mode === 'view'
      if visitor && visitor.id === uData.githubId
        .row
          #deleteSystem.ui.basic.fireBrick.button(role='button' tabindex='0' aria-label='Delete translation system')
            i.trash.icon
            span= __('Delete this system')
      .row
        h1= __('Test sets')
      .last.row
        .ui.cards

block append scripts
  if mode === 'view'
    script.
      var translationSystem = !{JSON.stringify(tsData).replace(/<\//g, '<\\/')}
      var src = '#{tsData.sourceLanguage}'
      var tgt = '#{tsData.targetLanguage}'
  script.
    var mode = '#{mode}'
    var systemId = '#{systemId}'
    var c2l = !{JSON.stringify(c2l).replace(/<\//g, '<\\/')}
    var isAuthor = #{visitor ? visitor.id === uData.githubId : false}
  script(src='/javascripts/utils.min.js')
  script(src='/javascripts/translationSystem.min.js')
  //- TODO - i18n
